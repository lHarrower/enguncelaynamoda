# AYNAMODA Ingress Configuration
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: aynamoda-api-ingress
  namespace: aynamoda-dev
  labels:
    app: aynamoda-api
  annotations:
    # GKE Ingress annotations
    kubernetes.io/ingress.class: "gce"
    kubernetes.io/ingress.global-static-ip-name: "aynamoda-api-ip"
    networking.gke.io/managed-certificates: "aynamoda-api-ssl-cert"
    kubernetes.io/ingress.allow-http: "false"
    
    # Security annotations
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-protocols: "TLSv1.2 TLSv1.3"
    
    # Rate limiting
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    
    # CORS
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://dev.aynamoda.com, https://staging.aynamoda.com, https://aynamoda.com"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "Content-Type, Authorization, X-Requested-With"
    
    # Timeouts
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "30"
    
    # Body size
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
spec:
  tls:
  - hosts:
    - api.dev.aynamoda.com
    secretName: aynamoda-api-tls
  rules:
  - host: api.dev.aynamoda.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: aynamoda-api-service
            port:
              number: 80
      - path: /health
        pathType: Exact
        backend:
          service:
            name: aynamoda-api-service
            port:
              number: 80
      - path: /ready
        pathType: Exact
        backend:
          service:
            name: aynamoda-api-service
            port:
              number: 80
      - path: /api/v1
        pathType: Prefix
        backend:
          service:
            name: aynamoda-api-service
            port:
              number: 80

---
# Managed SSL Certificate
apiVersion: networking.gke.io/v1
kind: ManagedCertificate
metadata:
  name: aynamoda-api-ssl-cert
  namespace: aynamoda-dev
  labels:
    app: aynamoda-api
spec:
  domains:
  - api.dev.aynamoda.com

---
# Static IP Address (Global)
apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeAddress
metadata:
  name: aynamoda-api-ip
  namespace: aynamoda-dev
  labels:
    app: aynamoda-api
spec:
  location: global
  addressType: EXTERNAL

---
# Network Policy for API
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: aynamoda-api-netpol
  namespace: aynamoda-dev
  labels:
    app: aynamoda-api
spec:
  podSelector:
    matchLabels:
      app: aynamoda-api
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: kube-system
    - namespaceSelector:
        matchLabels:
          name: gke-system
    - podSelector: {}
    ports:
    - protocol: TCP
      port: 8080
  egress:
  - to: []
    ports:
    - protocol: TCP
      port: 5432  # PostgreSQL
    - protocol: TCP
      port: 443   # HTTPS
    - protocol: TCP
      port: 53    # DNS
    - protocol: UDP
      port: 53    # DNS